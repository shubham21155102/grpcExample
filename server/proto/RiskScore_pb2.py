# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: RiskScore.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'RiskScore.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0fRiskScore.proto\x12\x10RiskScorePackage\"\x07\n\x05\x45mpty\"8\n\x10RiskScoreRequest\x12\x14\n\x0cmanufacturer\x18\x01 \x01(\t\x12\x0e\n\x06\x64\x65vice\x18\x02 \x01(\t\"\x81\x01\n\x0fRiskScoreUpdate\x12\x0e\n\x06status\x18\x01 \x01(\t\x12\x10\n\x08progress\x18\x02 \x01(\x01\x12\x12\n\nrisk_score\x18\x03 \x01(\x01\x12\x14\n\x0crecord_count\x18\x04 \x01(\x05\x12\x0f\n\x07message\x18\x05 \x01(\t\x12\x11\n\tcompleted\x18\x06 \x01(\x08\x32j\n\tRiskScore\x12]\n\x12\x43\x61lculateRiskScore\x12\".RiskScorePackage.RiskScoreRequest\x1a!.RiskScorePackage.RiskScoreUpdate0\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'RiskScore_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_EMPTY']._serialized_start=37
  _globals['_EMPTY']._serialized_end=44
  _globals['_RISKSCOREREQUEST']._serialized_start=46
  _globals['_RISKSCOREREQUEST']._serialized_end=102
  _globals['_RISKSCOREUPDATE']._serialized_start=105
  _globals['_RISKSCOREUPDATE']._serialized_end=234
  _globals['_RISKSCORE']._serialized_start=236
  _globals['_RISKSCORE']._serialized_end=342
# @@protoc_insertion_point(module_scope)
